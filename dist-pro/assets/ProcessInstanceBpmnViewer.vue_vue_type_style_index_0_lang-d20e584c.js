import{ao as u,d as y,p as t,r as l,A as d,B as f,o as I,q as b,w as o,L as g,i as h,ah as v,a as s,g as w,__tla as x}from"./index-ad2885e5.js";import{E as D,__tla as k}from"./el-card-5175ae0f.js";import{j as B,__tla as P}from"./bpmn-embedded-6f787894.js";let p,V=Promise.all([(()=>{try{return x}catch{}})(),(()=>{try{return k}catch{}})(),(()=>{try{return P}catch{}})()]).then(async()=>{let e;e=w("span",{class:"el-icon-picture-outline"},"\u6D41\u7A0B\u56FE",-1),p=y({name:"BpmProcessInstanceBpmnViewer",__name:"ProcessInstanceBpmnViewer",props:{loading:t.bool,id:t.string,processInstance:t.any,tasks:t.array,bpmnXml:t.string},setup(a){const r=a,n=l({prefix:"flowable"}),c=l([]);return d(async()=>{r.id&&(c.value=await(async i=>await u.get({url:"/bpm/activity/list",params:i}))({processInstanceId:r.id}))}),(i,X)=>{const _=D,m=g;return f((I(),b(_,{class:"box-card"},{header:o(()=>[e]),default:o(()=>[h(s(B),v({key:"designer",activityData:s(c),prefix:s(n).prefix,processInstanceData:a.processInstance,taskData:a.tasks,value:a.bpmnXml},s(n)),null,16,["activityData","prefix","processInstanceData","taskData","value"])]),_:1})),[[m,a.loading]])}}})});export{p as _,V as __tla};
